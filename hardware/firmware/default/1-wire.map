Archive member included because of file (symbol)

d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                              d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o (exit)
d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                              1-wire.o (__do_clear_bss)
d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(memset.o)
                              1-wire.o (memset)

Allocating common symbols
Common symbol       size              file

_deviceQ_rom_array  0x8               1-wire.o
data_buf            0x20              1-wire.o
crc8                0x1               1-wire.o
_deviceQ_all_rom    0xa0              1-wire.o
_deviceQ_ScratchPad
                    0x21              1-wire.o
rx_buf              0x32              1-wire.o
tx_buf              0x1e              1-wire.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
LOAD 1-wire.o
LOAD d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a
LOAD d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a
LOAD d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xaf6
 *(.vectors)
 .vectors       0x00000000       0x26 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000026      0x106 1-wire.o
                0x0000002c                dscrc_table
                0x00000026                StringP
                0x0000012c                . = ALIGN (0x2)
                0x0000012c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000012c        0x0 linker stubs
 *(.trampolines*)
                0x0000012c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000012c                __ctors_start = .
 *(.ctors)
                0x0000012c                __ctors_end = .
                0x0000012c                __dtors_start = .
 *(.dtors)
                0x0000012c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000012c        0x0 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x0000012c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000012c        0xc d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000138       0x10 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                0x00000138                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000148        0x4 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x0000014c        0x2 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x0000014c                __bad_interrupt
                0x0000014c                __vector_6
                0x0000014c                __vector_3
                0x0000014c                __vector_17
                0x0000014c                __vector_7
                0x0000014c                __vector_5
                0x0000014c                __vector_4
                0x0000014c                __vector_15
                0x0000014c                __vector_14
                0x0000014c                __vector_10
                0x0000014c                __vector_16
                0x0000014c                __vector_18
 .text          0x0000014e      0x996 1-wire.o
                0x000006b2                __vector_1
                0x0000036c                DeviceQ_COPY_SCARTCHPAD_COMMAND
                0x00000a9a                DeviceQ_READ_SCARTCHPAD_COMMAND
                0x00000798                DeviceQ_read_list_array
                0x000001e0                docrc8
                0x000002aa                DeviceQ_write_bit
                0x000003c8                DeviceQ_FamilySkipSetup
                0x000006da                __vector_12
                0x00000ac0                DeviceQ_READ_ROM_COMMAND
                0x000002ba                DeviceQ_write_byte
                0x00000748                DeviceQ_FIND_ALL
                0x0000033e                DeviceQ_MATCH_ROM_COMMAND
                0x000001f8                DeviceQ_Pullup
                0x0000027a                DeviceQ_write_1
                0x0000038a                DeviceQ_WRITE_SCARTCHPAD_COMMAND
                0x000007e2                chek
                0x00000702                __vector_11
                0x000001c0                SendStr_P
                0x000002de                DeviceQ_read_bit
                0x000006ee                __vector_13
                0x0000014e                USART_Init
                0x00000170                USART_Transmit
                0x000003f2                DeviceQ_SEARCH_ROM_COMMAND
                0x00000398                DeviceQ_TargetSetup
                0x00000670                USART_SendBuffCode
                0x0000022e                DeviceQ_reset
                0x00000a94                main
                0x0000030c                DeviceQ_read_byte
                0x000005ac                DeviceQ_First
                0x000001aa                USART_SendEND
                0x0000068a                __vector_9
                0x000006c6                __vector_2
                0x0000065c                MainInit
                0x000005a8                DeviceQ_Next
                0x00000554                DeviceQ_FIND_DEVICE_CODE
                0x00000228                DeviceQ_Init
                0x0000069e                __vector_8
                0x000005c8                DeviceQ_FIND_DEVICE_EXCEPTION_CODE
                0x0000017c                USART_SendBuff
                0x00000292                DeviceQ_write_0
 .text          0x00000ae4        0x0 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text          0x00000ae4        0x0 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .text          0x00000ae4        0x0 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(memset.o)
                0x00000ae4                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000ae4        0x0 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000ae4        0x0 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000ae4        0xe d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(memset.o)
                0x00000ae4                memset
                0x00000af2                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000af2        0x0 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                0x00000af2                exit
                0x00000af2                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000af2        0x4 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x00000af6                _etext = .

.data           0x00800060        0x0 load address 0x00000af6
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060        0x0 1-wire.o
 .data          0x00800060        0x0 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .data          0x00800060        0x0 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .data          0x00800060        0x0 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(memset.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060      0x144
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800060        0xa 1-wire.o
                0x00800068                _deviceQ_last_device_flag
                0x00800063                _deviceQ_select
                0x00800060                user_flag
                0x00800066                _deviceQ_last_family_discrepancy
                0x00800062                _deviceQ_find_count
                0x00800064                _deviceQ_last_discrepancy
                0x00800061                _1_WIRE_ERROR
 .bss           0x0080006a        0x0 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .bss           0x0080006a        0x0 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .bss           0x0080006a        0x0 d:/avr/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(memset.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0080006a      0x13a 1-wire.o
                0x0080006a                _deviceQ_rom_array
                0x00800072                data_buf
                0x00800092                crc8
                0x00800093                _deviceQ_all_rom
                0x00800133                _deviceQ_ScratchPad
                0x00800154                rx_buf
                0x00800186                tx_buf
                0x008001a4                PROVIDE (__bss_end, .)
                0x00000af6                __data_load_start = LOADADDR (.data)
                0x00000af6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008001a4        0x0
                0x008001a4                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008001a4                PROVIDE (__noinit_end, .)
                0x008001a4                _end = .
                0x008001a4                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x20
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 1-wire.o

.debug_pubnames
                0x00000000      0x496
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x496 1-wire.o

.debug_info     0x00000000      0xff4
 *(.debug_info)
 .debug_info    0x00000000      0xff4 1-wire.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x34f
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x34f 1-wire.o

.debug_line     0x00000000      0xcc5
 *(.debug_line)
 .debug_line    0x00000000      0xcc5 1-wire.o

.debug_frame    0x00000000      0x290
 *(.debug_frame)
 .debug_frame   0x00000000      0x290 1-wire.o

.debug_str      0x00000000      0x54f
 *(.debug_str)
 .debug_str     0x00000000      0x54f 1-wire.o
                                0x5b3 (size before relaxing)

.debug_loc      0x00000000      0x64a
 *(.debug_loc)
 .debug_loc     0x00000000      0x64a 1-wire.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(1-wire.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x18
 .debug_ranges  0x00000000       0x18 1-wire.o
